def main():
    def num_ways(n):
        if n == 0 or n == 1:
            return 1
        else:
            return num_ways(n - 1) + num_ways(n - 2)


    def num_ways_bottom_up(n):
        if n == 0 or n == 1: return 1
        nums = [1, 1]
        for i in range(2, n + 1):
            nums.append(nums[i - 1] + nums[i - 2])

        return nums[n]


    def num_ways_X(n, lis):
        if n == 0: return 1
        RetVal = 0
        for i in lis:
            if n - i >= 0:
                RetVal += num_ways_X(n - i, lis)

        return RetVal


    def num_ways_X_bottom_up(n):
        if n == 0: return 1

        nums = [1, 1, 1, 2, 3]

        for i in range(5, n + 1):
            nums.append(nums[i - 1] + nums[i - 3] + nums[i - 5])

        return nums[n]


    StepAm = [1, 3, 5]
    Steps = int(input("\n\nInput amount of steps: "))

    print("\nWith 1 or 2 steps - Total ways you can take - normal: {}".format(num_ways(Steps)))
    print("With 1 or 2 steps - Total ways you can take - bottom up: {}".format(num_ways_bottom_up(Steps)))

    print("With custom step amount - Total ways you can take - normal: {}".format(num_ways_X(Steps, StepAm)))
    print("With custom step amount - Total ways you can take - bottom up: {}".format(num_ways_X_bottom_up(Steps)))

    main()

main()
